#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <filesystem>
#include <windows.h>
using namespace std;

int main() {

	while (true) {

		int c = 1;
		string userInput;
		string text;

		fstream DBList("DBList.txt", fstream::in | fstream::out | fstream::app);
		cout << "Files:" << endl;
		//Print file names
		while (getline(DBList, text)) {
			cout << text << endl;
			c++;
		}
		cout << endl;

		//User input
		cout << "Which file would you like to open? (TYPE C TO CREATE)" << endl;
		cin >> userInput;

		DBList.close();

		//Create new file
		if (userInput == "C") {
			string userInput;
			cout << "Type desired file name" << endl;
			cin >> userInput;

			//Add .txt to the end of userInput
			string txt = ".txt";
			string fileName1 = userInput + txt;

			//Create the file
			ofstream fileName2(fileName1);
			fileName2.close();

			//Add userInput file name to DBList
			fstream DBList("DBList.txt", ios::app);
			if (DBList.is_open()) {
				DBList << fileName1 << endl;
				DBList.close();
			}
		}
		//Open existing file
		else {

			char userInput1;
			int c = 1;
			string text;
			string txt = ".txt";
			string fullFile = userInput + txt;

			//File found
			if (std::filesystem::exists(fullFile)) {
				fstream fileName(fullFile, fstream::out | fstream::app);
				system("cls");
				cout << fullFile << " has been opened!" << endl;
				cout << endl;
				//Options
				cout << "What would you like to do with " << fullFile << "?" << endl;
				cout << "N : Take notes" << endl;
				cout << "E : General entries" << endl;
				cin >> userInput1;
				// Lowercase op
				userInput1 = (char)tolower(userInput1);

				//Note Check
				if (userInput1 == 'n') {
					system("cls");
					cout << "You can start to take notes. When you're done, type 'end'" << endl;
					//Note loop
					while (true) {
						string check = "end";
						string notes;
						string period = ".";
						string space = " ";
						string rawNotes;
						string notes1;

						//UserInput
						std::getline(std::cin, rawNotes);

						//`end` check
						if (rawNotes == check) {
							fileName.close();
							break;
						}

						//Period check
						if (rawNotes.length() > 0 && rawNotes[rawNotes.length() - 1] != '.') {
							string notes = rawNotes + period + space;
							fileName << notes;
						}
						else if (rawNotes.length() > 0 && rawNotes[rawNotes.length() - 1] == '.') {
							string notes = rawNotes + space;
							fileName << notes;
						}
					}
				}

				//General Entries Check
				if (userInput1 == 'e') {
					string fname;
					string lname;
					string gender;
					string number;
					int num = rand() % 10000;
					std::string id = std::to_string(num);

					// Last name
					cout << "Last name: ";
					cin >> lname;
					// First name
					cout << "First name: ";
					cin >> fname;
					// Gender
					cout << "Gender: ";
					cin >> gender;
					// Gender Check
					while (gender != "Female" && gender != "F" && gender != "Male" && gender != "M") {
						cout << "Unknown. Gender: ";
						cin >> gender;
					}
					if (gender == "Male" || gender == "M") {
						gender = "M";
					}
					else if (gender == "Female" || gender == "F") {
						gender = "F";
					}
					// Phone number
					cout << "Phone number: ";
					cin >> number;
					// Phone number check
					while (number.length() > 10) {
						cout << "Too many digits" << endl;
						cout << "Phone number: ";
						cin >> number;
					}
					while (number.length() < 10) {
						cout << "Not enough digits" << endl;
						cout << "Phone number: ";
						cin >> number;
					}
					char answer;

					// String combination
					string userTCheck = lname + " " + fname + " " + gender + " " + number + " ";
					string userText = lname + "!" + fname + "@" + gender + "#" + number + "$" + id;

					// String confirmation
					cout << userTCheck << endl;
					cout << "Is this correct? (Y/N)" << endl;
					cin >> answer;

					// Answered yes
					if (answer == 'Y') {
						fileName = fstream(fullFile, fstream::out | fstream::app);
						fileName << userText;
						fileName.close();
						cout << "Saved successfully!" << endl;
					}

				}
			}
				//File not found
				else if (!std::filesystem::exists(fullFile)) {
					system("cls");
					cout << "Error:0000 " << fullFile << " Not found!" << endl;
				}
		}

	}
}
